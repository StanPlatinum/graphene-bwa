# DO NOT MODIFY. THIS FILE WAS AUTO-GENERATED.

# your_app manifest file example
#
# This manifest was prepared and tested on Ubuntu 16.04.

loader.argv0_override = "$(APP_NAME)"

# LibOS layer library of Graphene. There is currently only one implementation,
# so it is always set to libsysdb.so.
loader.preload = "file:/home/ya0guang/graphene/Runtime/libsysdb.so"

# Show/hide debug log of Graphene ('inline' or 'none' respectively).
loader.debug_type = "none"

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

# Specify paths to search for libraries. The usual LD_LIBRARY_PATH syntax
# applies. Paths must be in-Graphene visible paths, not host-OS paths (i.e.,
# paths must be taken from fs.mount.xxx.path, not fs.mount.xxx.uri).
loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu:/usr//lib/x86_64-linux-gnu:/usr/lib//lib/x86_64-linux-gnu"

# Mount host-OS directory to required libraries (in 'uri') into in-Graphene
# visible directory /lib (in 'path').
fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:/home/ya0guang/graphene/Runtime"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "/lib/x86_64-linux-gnu"
fs.mount.lib2.uri = "file:/lib/x86_64-linux-gnu"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr/lib/x86_64-linux-gnu"
fs.mount.lib3.uri = "file:/usr//lib/x86_64-linux-gnu"

# fs.mount.etc.type = "chroot"
# fs.mount.etc.path = "/etc"
# fs.mount.etc.uri = "file:/etc"

fs.mount."$(APP_NAME)".type = "chroot"
fs.mount."$(APP_NAME)".path = "."
fs.mount."$(APP_NAME)".uri = "file:."

# Set enclave size (somewhat arbitrarily) to 256MB. Recall that SGX v1 requires
# to specify enclave size at enclave creation time.
sgx.enclave_size = "1024M"

# Set maximum number of in-enclave threads (somewhat arbitrarily) to 4. Recall
# that SGX v1 requires to specify the maximum number of simultaneous threads at
# enclave creation time.
sgx.thread_num = 10

# Specify protected data files

sgx.allowed_files.data = "file:./data"

# Specify all libraries used by $(APP_NAME) and its dependencies (including all libs
# which can be loaded at runtime via dlopen).
sgx.trusted_files.ld = "file:/home/ya0guang/graphene/Runtime/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:/home/ya0guang/graphene/Runtime/libc.so.6"
sgx.trusted_files.libm = "file:/home/ya0guang/graphene/Runtime/libm.so.6"
# sgx.trusted_files.libdl = "file:/home/ya0guang/graphene/Runtime/libdl.so.2"
sgx.trusted_files.librt = "file:/home/ya0guang/graphene/Runtime/librt.so.1"
# sgx.trusted_files.libutil = "file:/home/ya0guang/graphene/Runtime/libutil.so.1"
sgx.trusted_files.libpthread = "file:/home/ya0guang/graphene/Runtime/libpthread.so.0"
sgx.trusted_files.libgcc_s = "file:/usr/lib/x86_64-linux-gnu/libgcc_s.so.1"
# sgx.trusted_files.libnss_files = "file:/lib/x86_64-linux-gnu/libnss_files.so.2"
# sgx.trusted_files.libnss_mdns4_minimal = "file:/lib/x86_64-linux-gnu/libnss_mdns4_minimal.so.2"
sgx.trusted_files.libcso6 = "file:/lib/x86_64-linux-gnu/libc.so.6"
sgx.trusted_files.libmso6 = "file:/lib/x86_64-linux-gnu/libm.so.6"
sgx.trusted_files.libpthreadso0 = "file:/lib/x86_64-linux-gnu/libpthread.so.0"
sgx.trusted_files.librtso1 = "file:/lib/x86_64-linux-gnu/librt.so.1"
sgx.trusted_files.libzso1 = "file:/lib/x86_64-linux-gnu/libz.so.1"


# Name Service Switch (NSS) files. Glibc reads these files as part of name-
# service information gathering. For more info, see 'man nsswitch.conf'.
# sgx.allowed_files.nsswitch = "file:/etc/nsswitch.conf"
# sgx.allowed_files.hostconf = "file:/etc/host.conf"
# sgx.allowed_files.resolvconf = "file:/etc/resolv.conf"
# sgx.allowed_files.ethers = "file:/etc/ethers"
# sgx.allowed_files.hosts = "file:/etc/hosts"
# sgx.allowed_files.group = "file:/etc/group"
# sgx.allowed_files.passwd = "file:/etc/passwd"
# sgx.allowed_files.gaiconf = "file:/etc/gai.conf"

# Generated by Graphene

sgx.enable_stats = 0
sgx.isvprodid = 0
sgx.isvsvn = 0
sgx.static_address = 0
sgx.trusted_checksum.exec = "e2562bc98aa36ad7895b77571c19a1c9b40c30b56bcdd22de35cdd395797e588"
sgx.trusted_checksum.ld = "e70426e0c450235f2c8d60500f157f07ae76c0af8c074376b98c5452443bc471"
sgx.trusted_checksum.libc = "c01855081758b84a6320e2bd9d204f0ea54c6f08acf82b887ae7d3f7894b4e34"
sgx.trusted_checksum.libcso6 = "4db473e38da06f7b1ad54ef117a184e08ffda27bbbb5329d03831186e3e533c8"
sgx.trusted_checksum.libgcc_s = "a40528be28d16ec3580ee29bda674c0c4f7870e4265d7f517865c1f55eba98c6"
sgx.trusted_checksum.libm = "2226b16d6c0ee0c48155226d92fb989b88dd838f9932bbcde7d7110c04c29f21"
sgx.trusted_checksum.libmso6 = "1b8528730c8b4155f03bf32aa5579e9c49a0b66c3977acd4bfaca758bbdaad0e"
sgx.trusted_checksum.libpthread = "3348017024a112a79b7a400377568d13c0a33ef05ae5d60f3be47d89349f635b"
sgx.trusted_checksum.libpthreadso0 = "dbf0858093b194e43490faabd399d91e2b643e54caeccd808c1c950a27468afd"
sgx.trusted_checksum.librt = "738c725244829ecae18c891138b437726ab80fa3e2ae19586c7b65a18e44ddc5"
sgx.trusted_checksum.librtso1 = "52a5aaa8cbaa3dd6ffa7f1256bf6e3e0bd1102f9cafbf902b7aef646187ddf70"
sgx.trusted_checksum.libzso1 = "251f20bdf98b26a4f2318792f75850ca0f32175b3a003e7f5b5964545ce2c57a"
sgx.trusted_checksum.preload0 = "b4da976fb994b941b6eef2ef5a6883b141a999c8d33b232a5bc8a7c99d6016b9"
