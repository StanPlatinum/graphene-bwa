# your_app manifest file example
#
# This manifest was prepared and tested on Ubuntu 16.04.

libos.entrypoint = "file:$(APP_DIR)/bwa"
loader.argv0_override = "bwa"

# LibOS layer library of Graphene. There is currently only one implementation,
# so it is always set to libsysdb.so. 
loader.preload = "file:$(GRAPHENEDIR)/Runtime/libsysdb.so"

# sgx.nonpie_binary = 1

# Graphene log level
loader.log_level = "debug"
#loader.log_level = "$(GRAPHENE_LOG_LEVEL)"

# Show/hide debug log of Graphene ('inline' or 'none' respectively).
#loader.debug_type = "$(GRAPHENEDEBUG)"

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

# Specify paths to search for libraries. The usual LD_LIBRARY_PATH syntax
# applies. Paths must be in-Graphene visible paths, not host-OS paths (i.e.,
# paths must be taken from fs.mount.xxx.path, not fs.mount.xxx.uri).
loader.env.LD_LIBRARY_PATH = "/lib:$(ARCH_LIBDIR):/usr/$(ARCH_LIBDIR):/usr/lib/$(ARCH_LIBDIR)"

# Mount host-OS directory to required libraries (in 'uri') into in-Graphene
# visible directory /lib (in 'path').
fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:$(GRAPHENEDIR)/Runtime"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "$(ARCH_LIBDIR)"
fs.mount.lib2.uri = "file:$(ARCH_LIBDIR)"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr$(ARCH_LIBDIR)"
fs.mount.lib3.uri = "file:/usr/$(ARCH_LIBDIR)"

# fs.mount.etc.type = "chroot"
# fs.mount.etc.path = "/etc"
# fs.mount.etc.uri = "file:/etc"

fs.mount."$(APP_NAME)".type = "chroot"
fs.mount."$(APP_NAME)".path = "$(APP_DIR)"
fs.mount."$(APP_NAME)".uri = "file:$(APP_DIR)"

# Set enclave size (somewhat arbitrarily) to 256MB. Recall that SGX v1 requires
# to specify enclave size at enclave creation time.
sgx.enclave_size = "32768M"

sys.stack.size = "1G"

# Set maximum number of in-enclave threads (somewhat arbitrarily) to 4. Recall
# that SGX v1 requires to specify the maximum number of simultaneous threads at
# enclave creation time.
sgx.thread_num = 4

# Specify protected data files

sgx.allowed_files.data = "file:data/"
#sgx.allowed_files.data1 = "file:/mnt/graphene-dida-bwa/hg38_reference.fa"
#sgx.allowed_files.data2 = "file:/mnt/graphene-dida-bwa/SRR062634.filt.fastq"
#sgx.allowed_files.data3 = "file:/mnt/graphene-dida-bwa/hg38_reference.fa.amb"
#sgx.allowed_files.data4 = "file:/mnt/graphene-dida-bwa/hg38_reference.fa.ann"
#sgx.allowed_files.data5 = "file:/mnt/graphene-dida-bwa/hg38_reference.fa.bwt"
#sgx.allowed_files.data6 = "file:/mnt/graphene-dida-bwa/hg38_reference.fa.pac"
#sgx.allowed_files.data7 = "file:/mnt/graphene-dida-bwa/hg38_reference.fa.sa"


# sgx.protected_files.data= "file:data"

# Specify all libraries used by $(APP_NAME) and its dependencies (including all libs
# which can be loaded at runtime via dlopen).

sgx.trusted_files.curl = "file:$(APP_DIR)/bwa"

sgx.trusted_files.ld = "file:$(GRAPHENEDIR)/Runtime/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:$(GRAPHENEDIR)/Runtime/libc.so.6"
sgx.trusted_files.libm = "file:$(GRAPHENEDIR)/Runtime/libm.so.6"
# sgx.trusted_files.libdl = "file:$(GRAPHENEDIR)/Runtime/libdl.so.2"
sgx.trusted_files.librt = "file:$(GRAPHENEDIR)/Runtime/librt.so.1"
# sgx.trusted_files.libutil = "file:$(GRAPHENEDIR)/Runtime/libutil.so.1"
sgx.trusted_files.libpthread = "file:$(GRAPHENEDIR)/Runtime/libpthread.so.0"

sgx.trusted_files.libz = "file:/lib/x86_64-linux-gnu/libz.so.1"

sgx.trusted_files.libgcc_s = "file:/lib/x86_64-linux-gnu/libgcc_s.so.1"
# sgx.trusted_files.libgcc_s = "file:/usr/lib/x86_64-linux-gnu/libgcc_s.so.1"
# sgx.trusted_files.libnss_files = "file:$(ARCH_LIBDIR)/libnss_files.so.2"
# sgx.trusted_files.libnss_mdns4_minimal = "file:$(ARCH_LIBDIR)/libnss_mdns4_minimal.so.2"
$(APP_TRUSTED_LIBS)

# Name Service Switch (NSS) files. Glibc reads these files as part of name-
# service information gathering. For more info, see 'man nsswitch.conf'.
# sgx.allowed_files.nsswitch = "file:/etc/nsswitch.conf"
# sgx.allowed_files.hostconf = "file:/etc/host.conf"
# sgx.allowed_files.resolvconf = "file:/etc/resolv.conf"
# sgx.allowed_files.ethers = "file:/etc/ethers"
# sgx.allowed_files.hosts = "file:/etc/hosts"
# sgx.allowed_files.group = "file:/etc/group"
# sgx.allowed_files.passwd = "file:/etc/passwd"
# sgx.allowed_files.gaiconf = "file:/etc/gai.conf"
